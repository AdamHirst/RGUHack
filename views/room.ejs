<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="https://fonts.googleapis.com/css?family=Titillium+Web:200,300,400" rel="stylesheet">
    <link rel="stylesheet" href="css/style.css">
    <title>transcri.me | #<%= room %></title>
</head>
<body>
        <div class="content">
            <h1 class="title">transcri.me</h1>
            <h2 class="subtitle">the web based collaborative dictation service</h2>
            <div class="header">
                You are in #<%= room %> with <span id="nusers">0</span> others:
                <div class="online" id="online-users"></div>
            </div>

            <div id="output">
                <span id="final"></span>
                <span id="temp"></span>
            </div>
        </div>

        <script src="./js/transcri.me.js"></script>
        <script src="/socket.io/socket.io.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.js"></script>
        <script>
            var socket = io();

            var roomName = "<%= room %>";
            var name = "<%= profile.name.givenName %>";
            var fullName = "<%= profile.displayName %>";
            var photo = "<%= profile.photos[0].value %>";

            socket.emit('join room', { name: name, photo: photo, roomId: roomName, fullName: fullName })

            startTranscribing(socket);

            function getMessageTemplate(id, message, author) {
                return `<div class="card"><div class="card-image" style="background-image:url('${author.photo}');"></div> <div class="card-content"><div class="card-title">${author.name}</div><div id="message-${id}">${message}</div></div></div>`;
            }

            function getUserMessageTemplate(id, message, author) {
                return `<div class="card card-rtl"><div class="card-image" style="background-image:url('${author.photo}');"></div><div class="card-content"><div class="card-title">${author.name}</div><div id="message-${id}">${message}</div></div></div>`;
            }
 
            socket.on('online users', (data) => {
                var keys = Object.keys(data.users);
                $("#nusers").text(keys.length-1);
                keys.forEach(key => {   
                    var user = data.users[key];
                    $("#online-users").append(`<div class="icon" style="background-image: url('${user.photo}');"></div>`) 
                });
            });

            socket.on('interim update', (data) => {
                // Try to find the associated div
                var el = document.getElementById('message-' + data.id);

                console.log(el);

                if (el == null) {
                    // Create the element
                    if (data.target == socket.id) {
                        $('#output').append(getUserMessageTemplate(data.id, data.string, data.user));
                        el = document.getElementById('message-' + data.id);
                    } else {
                        $('#output').append(getMessageTemplate(data.id, data.string, data.user));
                        el = document.getElementById('message-' + data.id);
                    }
                } else {
                    $('#message-' + data.id).text(data.string +  "...");
                }
                
                el.scrollIntoView();
            });

            socket.on('final update', (data) => {
                // Try to find the associated div
                var el = document.getElementById('message-' + data.id);

                console.log('Final: ' + data.string);

                if (el == null) {
                    // Create the element
                    if (data.target == socket.id) {
                        $('#output').append(getUserMessageTemplate(data.id, data.string, data.user));
                        el = document.getElementById('message-' + data.id);
                    } else {
                        $('#output').append(getMessageTemplate(data.id, data.string, data.user));
                        el = document.getElementById('message-' + data.id);
                    }
                } else {
                    $('#message-' + data.id).html(data.string);
                }
 
                el.scrollIntoView();
            });

            socket.on('user joined', (data) => {
                $('#output').append('<p class="centered-text">' + data.user.fullName + ' has joined the room</p>');
            });

            socket.on('user left', (data) => {
                $('#output').append('<p class="centered-text">' + data.user.fullName + ' has left the room</p>');
            })
        </script>
</body>
</html>